<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABubm5ubm5ubm5ubm4AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB4jeUzs9wlrtwYlr4sjaxIgZNhdHtubm5ubm4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4jeVkxuiG3P90
        1f9ayvI+u+grsdsZnccmkLJAhJpbeIFubm5ubm5ubm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4jeVaw+SK3/983f983f983f983f983f9kz/ZOxOoytuES
        p9Ufk7c6h6BUe4dubm5ubm5ubm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB4jeUzs9yc5f983f983f983f983f983f983f983f983f983f9v1vlayvI7veMerNsYlr40iqVOfo1h
        dHtubm5ubm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4jeU6td2k6f+E5P+E5P+E5P+E5P+E
        5P+E5P+E5P+E5P+E5P+E5P+E5P+E5P+E5P+E5P9k0vNGwugksdsRmsQ6h6Bubm4AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB4jeU6td2q6/+E5P+E5P+E5P+E5P+E5P+E5P+E5P+E5P+E5P+E5P+E5P+E5P+E
        5P+E5P+E5P+E5P+E5P983f8Ylr5ubm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4jeUrsduq6/+L
        7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P983f8erNtubm4A
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUme4Mo9PD8v6L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L
        7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P+L7P983f8erNtocXRubm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACUme4rsdvD8v6U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U
        9P+E5P9OxOpUe4dubm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAoeozs9zM9P+U9P+U9P+U9P+U9P+U
        9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+U9P+E5P9OxOpOfo1ubm4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAzs9wzs9zD8v6d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d
        /P+d/P+d/P+d/P+d/P+E5P9/3PM6h6Bubm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLuuE6td2t4fOd
        /P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+d/P+E5P+E3PMsjaxu
        bm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkxuhkxuiy4vKi//+i//+i//+i//+i//+i//+i//+i//+i
        //+i//+i//+i//+i//+i//+i//+i//+i//+L7P+38/8fk7dubm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABpxuhpxuiy4vKy//+y//+y//+y//+y//+y//+y//+y//+y//+y//+y//+y//+y//+y//+y//+y//+y
        //+U6P698/8foMdubm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpxuhvyup+zejj/v/V/v/K///K///D
        /f+///+///+///+///+///+///+///+///+///+///+///+///+U6P7D8v49uNxubm4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABvyuqU6P47veMrsdtGt9x+zeid2e655PPt/f/j/v/K///K///K///K///K///K
        ///K///K///K///K//+c6P/D8v5Pvt9hdHsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACm3vOn9f+U9P+U
        9P+G7Pl04fNQzOg+weEksdt1yeTt/f/b/P/V/v/V/v/V/v/V/v/V/v/V/v/V/v/V/v+k6f/M9P990OhU
        e4cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACt4fOs/f+d/P+d/P+d/P+d/P+d/P+d/P+d/P82vt+Cz+j1
        /v/t/f/t/f/t/f/j/v/j/v/j/v/j/v/j/v+q6//T8/+T1etIgZMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACy4vKy//+i//+i//+i//+i//+i//+i//+i//+W+fxGwugrsdtGt9xlw+GG0Oiy4vLE6PP5/v/5/v/1
        /v/F7v/j9v7E6PM6h6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB+zejV/v+i//+i//+i//+i//+i//+i
        //+i///V/v/b/P/D/f/D/f+Y7PaF5/NV0OhGwugsuNwerNVGt9x1yeSG0OiT1etvitIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACbnOzj9v6s/f+i//+i//+i//+i//+i///b/P+d2e6Dp9uPpeqCz+iP1Ou55PPL
        6/bb/P/b/P/K//+///9cyeQ6h6A6h6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlw+Ht/f/j
        /v/K///K//+y///K///L6/ZqjbcAAAAAAAAAAAAAAAAAAAAerNWOlumOlumPpeplw+FVvd8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbnOxis+F4yuSG0Oil3O7E6PN4pOEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/////////////////////+H////AH///wAD//8AAD//AAAD/wAAAf8AAAH/AA
        AB/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAH/gD
        4H/8B////////////////////////w==
</value>
  </data>
</root>